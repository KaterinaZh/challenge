openapi: 3.0.0
info:
  version: 1.0.0
  title: JS Coding challenge
  description: API for JS coding challenge
paths:
  /login:
    post:
      summary: Admin Login
      description: Authenticate a user and return a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                  example: johndoe
                password:
                  type: string
                  description: The user's password.
                  example: mypassword
      responses:
        '200':
          description: Authentication completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Authentication completed
                  token:
                    type: string
                    example: your_jwt_token_here
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User johndoe not found
  /register:
    post:
      summary: User register
      description: Register a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: The first name of the user.
                  example: John
                last_name:
                  type: string
                  description: The last name of the user.
                  example: Doe
                photo:
                  type: string
                  description: The photo of the user.
                  example: null
                telescope_link:
                  type: string
                  description: Link to User telescope profile
                  example: https://telescope.epam.com/who/John_Doe?tab=profile&category=all
                codewars_username:
                  type: string
                  description: User codewars username
                  example: JohnDoeCodeWars
      responses:
        '200':
          description: The user has been successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user has been successfully created
        '401':
          description: Error during user registration process
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error during user registration process
  /runs:
    post:
      summary: Creating a run
      description: Creating a run if it doesn't exist.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                runStartDate:
                  type: string
                  format: date
                  description: Start date of a new run.
                  example: '2020-05-11'
                runEndDate:
                  type: string
                  format: date
                  description: End date of a new run.
                  example: '2021-05-11'
      responses:
        '201':
          description: Run successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: New run successfully created
        '400':
          description: Error creating run.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error creating run
    get:
      summary: Information about existing runs
      description: Get information about all existing runs.
      responses:
        '200':
          description: Return an array with existing runs or empty array.
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                    example:
                      [
                        {
                          'id': 5,
                          'run_start_date': '2020-10-09T18:00:00.000Z',
                          'run_end_date': '2021-10-09T18:00:00.000Z',
                        },
                        {
                          'id': 6,
                          'run_start_date': '2021-10-09T18:00:00.000Z',
                          'run_end_date': '2022-10-09T18:00:00.000Z',
                        },
                      ]
  /runs/{id}:
    get:
      summary: Information about a specific run
      description: Get information about a specific run.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the run to be retrieved.
      responses:
        '200':
          description: Return information about the run.
          content:
            application/json:
              schema:
                type: object
                properties:
                  run:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      run_start_date:
                        type: string
                        format: date-time
                        example: '2020-10-09T18:00:00.000Z'
                      run_end_date:
                        type: string
                        format: date-time
                        example: '2021-10-09T18:00:00.000Z'
        '404':
          description: Run with provided ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Run not found
    put:
      summary: Updating a run
      description: Updating an existing run.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the run to be updated.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                newRunEndDate:
                  type: string
                  format: date
                  description: New end date of an existing run.
                  example: '2021-05-11'
      responses:
        '200':
          description: Run successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Run end date successfully updated
        '400':
          description: Error updating run.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error updating run
        '404':
          description: Run with provided ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Run not found
    delete:
      summary: Deleting a run
      description: Deleting an existing run.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the run to be deleted.
      responses:
        '204':
          description: Run successfully deleted.
          content:
            application/json: {}
        '400':
          description: Error deleting run.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error deleting run
        '404':
          description: Run with provided ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Run not found
components:
  schemas:
    Run:
      type: object
      properties:
        id:
          type: integer
          example: 5
        run_start_date:
          type: string
          format: date
          example: '2020-10-10'
        run_end_date:
          type: string
          format: date
          example: '2021-10-10'
